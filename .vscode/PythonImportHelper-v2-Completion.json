[
    {
        "label": "api.v1.endpoints",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "api.v1.endpoints",
        "description": "api.v1.endpoints",
        "detail": "api.v1.endpoints",
        "documentation": {}
    },
    {
        "label": "usuario",
        "importPath": "api.v1.endpoints",
        "description": "api.v1.endpoints",
        "isExtraImport": true,
        "detail": "api.v1.endpoints",
        "documentation": {}
    },
    {
        "label": "fastapi.security",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordRequestForm",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordBearer",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordRequestForm",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "pydantic",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pydantic",
        "description": "pydantic",
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseSettings",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "EmailStr",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "EmailStr",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generator",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generator",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FileResponse",
        "importPath": "fastapi.responses",
        "description": "fastapi.responses",
        "isExtraImport": true,
        "detail": "fastapi.responses",
        "documentation": {}
    },
    {
        "label": "sqlalchemy.ext.asyncio",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "create_async_engine",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncEngine",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "async_sessionmaker",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "async_sessionmaker",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "get_session",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_session",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_session",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "gerar_hash_senha",
        "importPath": "core.security",
        "description": "core.security",
        "isExtraImport": true,
        "detail": "core.security",
        "documentation": {}
    },
    {
        "label": "comparar_senha",
        "importPath": "core.security",
        "description": "core.security",
        "isExtraImport": true,
        "detail": "core.security",
        "documentation": {}
    },
    {
        "label": "gerar_hash_senha",
        "importPath": "core.security",
        "description": "core.security",
        "isExtraImport": true,
        "detail": "core.security",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "schemas.usuario_schema",
        "description": "schemas.usuario_schema",
        "isExtraImport": true,
        "detail": "schemas.usuario_schema",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "schemas.usuario_schema",
        "description": "schemas.usuario_schema",
        "isExtraImport": true,
        "detail": "schemas.usuario_schema",
        "documentation": {}
    },
    {
        "label": "criar_acess_token",
        "importPath": "core.auth",
        "description": "core.auth",
        "isExtraImport": true,
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "get_current_user",
        "importPath": "core.auth",
        "description": "core.auth",
        "isExtraImport": true,
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "jwt",
        "importPath": "jose",
        "description": "jose",
        "isExtraImport": true,
        "detail": "jose",
        "documentation": {}
    },
    {
        "label": "JWTError",
        "importPath": "jose.exceptions",
        "description": "jose.exceptions",
        "isExtraImport": true,
        "detail": "jose.exceptions",
        "documentation": {}
    },
    {
        "label": "declarative_base",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "core.database",
        "description": "core.database",
        "isExtraImport": true,
        "detail": "core.database",
        "documentation": {}
    },
    {
        "label": "engine",
        "importPath": "core.database",
        "description": "core.database",
        "isExtraImport": true,
        "detail": "core.database",
        "documentation": {}
    },
    {
        "label": "engine",
        "importPath": "core.database",
        "description": "core.database",
        "isExtraImport": true,
        "detail": "core.database",
        "documentation": {}
    },
    {
        "label": "CryptContext",
        "importPath": "passlib.context",
        "description": "passlib.context",
        "isExtraImport": true,
        "detail": "passlib.context",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "TarefaModel",
        "importPath": "models.tarefa_model",
        "description": "models.tarefa_model",
        "isExtraImport": true,
        "detail": "models.tarefa_model",
        "documentation": {}
    },
    {
        "label": "TarefaSchema",
        "importPath": "schemas.tarefa_schema",
        "description": "schemas.tarefa_schema",
        "isExtraImport": true,
        "detail": "schemas.tarefa_schema",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "api_router",
        "importPath": "api.v1.api",
        "description": "api.v1.api",
        "isExtraImport": true,
        "detail": "api.v1.api",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "fastapi.middleware.cors",
        "description": "fastapi.middleware.cors",
        "isExtraImport": true,
        "detail": "fastapi.middleware.cors",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "Backend.api.v1.endpoints.usuario",
        "description": "Backend.api.v1.endpoints.usuario",
        "peekOfCode": "router = APIRouter(dependencies=[Depends(get_current_user)])\nrouterLogin = APIRouter()\n@router.get('/me', response_model=UsuarioSchemaBase)\nasync def me(usuario = Depends(get_current_user)):\n    return usuario\n@routerLogin.post('/login')\nasync def autentica_user(OAuth2PasswordRequestForm: OAuth2PasswordRequestForm = Depends(),db: AsyncSession = Depends(get_session)):\n    async with db as session:\n        query = select(UsuarioModel).filter(UsuarioModel.email == OAuth2PasswordRequestForm.username)\n        result = await session.execute(query)",
        "detail": "Backend.api.v1.endpoints.usuario",
        "documentation": {}
    },
    {
        "label": "routerLogin",
        "kind": 5,
        "importPath": "Backend.api.v1.endpoints.usuario",
        "description": "Backend.api.v1.endpoints.usuario",
        "peekOfCode": "routerLogin = APIRouter()\n@router.get('/me', response_model=UsuarioSchemaBase)\nasync def me(usuario = Depends(get_current_user)):\n    return usuario\n@routerLogin.post('/login')\nasync def autentica_user(OAuth2PasswordRequestForm: OAuth2PasswordRequestForm = Depends(),db: AsyncSession = Depends(get_session)):\n    async with db as session:\n        query = select(UsuarioModel).filter(UsuarioModel.email == OAuth2PasswordRequestForm.username)\n        result = await session.execute(query)\n        usuario: UsuarioSchemaBase = result.scalars().unique().one_or_none()",
        "detail": "Backend.api.v1.endpoints.usuario",
        "documentation": {}
    },
    {
        "label": "api_router",
        "kind": 5,
        "importPath": "Backend.api.v1.api",
        "description": "Backend.api.v1.api",
        "peekOfCode": "api_router = APIRouter()\napi_router.include_router(usuario.router, prefix='/usuarios', tags=['usuarios'])\napi_router.include_router(usuario.routerLogin, prefix='/usuarios', tags=['usuarios'])",
        "detail": "Backend.api.v1.api",
        "documentation": {}
    },
    {
        "label": "criar_acess_token",
        "kind": 2,
        "importPath": "Backend.core.auth",
        "description": "Backend.core.auth",
        "peekOfCode": "def criar_acess_token(usuario_id: str):\n    expiracao = str(datetime.utcnow() + timedelta(EXPIRES_IN_MIN))\n    payload = {\n        'sub': usuario_id,\n        'ext': expiracao\n        }\n    token_jwt = jwt.encode(payload, SECRET_KEY, algorithm=ALGORITH)\n    return token_jwt\nasync def get_current_user(token: str = Depends(oauth2_scheme), db: AsyncSession = Depends(get_session)):\n    credentials_exception = HTTPException(",
        "detail": "Backend.core.auth",
        "documentation": {}
    },
    {
        "label": "EXPIRES_IN_MIN",
        "kind": 5,
        "importPath": "Backend.core.auth",
        "description": "Backend.core.auth",
        "peekOfCode": "EXPIRES_IN_MIN = 60*24*7\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/api/v1/usuarios/login\")\ndef criar_acess_token(usuario_id: str):\n    expiracao = str(datetime.utcnow() + timedelta(EXPIRES_IN_MIN))\n    payload = {\n        'sub': usuario_id,\n        'ext': expiracao\n        }\n    token_jwt = jwt.encode(payload, SECRET_KEY, algorithm=ALGORITH)\n    return token_jwt",
        "detail": "Backend.core.auth",
        "documentation": {}
    },
    {
        "label": "oauth2_scheme",
        "kind": 5,
        "importPath": "Backend.core.auth",
        "description": "Backend.core.auth",
        "peekOfCode": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/api/v1/usuarios/login\")\ndef criar_acess_token(usuario_id: str):\n    expiracao = str(datetime.utcnow() + timedelta(EXPIRES_IN_MIN))\n    payload = {\n        'sub': usuario_id,\n        'ext': expiracao\n        }\n    token_jwt = jwt.encode(payload, SECRET_KEY, algorithm=ALGORITH)\n    return token_jwt\nasync def get_current_user(token: str = Depends(oauth2_scheme), db: AsyncSession = Depends(get_session)):",
        "detail": "Backend.core.auth",
        "documentation": {}
    },
    {
        "label": "Settings",
        "kind": 6,
        "importPath": "Backend.core.configs",
        "description": "Backend.core.configs",
        "peekOfCode": "class Settings(BaseSettings):\n    API_V1: str = '/api/v1'\n    DB_URL: str = 'mysql+asyncmy://root:root@localhost/seed?charset=utf8mb4'\n    DBBaseModel = declarative_base()\n    class Config:\n        case_sensitive: True\nsettings = Settings()",
        "detail": "Backend.core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "kind": 5,
        "importPath": "Backend.core.configs",
        "description": "Backend.core.configs",
        "peekOfCode": "settings = Settings()",
        "detail": "Backend.core.configs",
        "documentation": {}
    },
    {
        "label": "gerar_hash_senha",
        "kind": 2,
        "importPath": "Backend.core.security",
        "description": "Backend.core.security",
        "peekOfCode": "def gerar_hash_senha(senha: str) -> str:\n    return CRIPTO.hash(senha)\ndef comparar_senha(senha: str, hash_senha: str) -> bool:\n    return CRIPTO.verify(senha, hash_senha)",
        "detail": "Backend.core.security",
        "documentation": {}
    },
    {
        "label": "comparar_senha",
        "kind": 2,
        "importPath": "Backend.core.security",
        "description": "Backend.core.security",
        "peekOfCode": "def comparar_senha(senha: str, hash_senha: str) -> bool:\n    return CRIPTO.verify(senha, hash_senha)",
        "detail": "Backend.core.security",
        "documentation": {}
    },
    {
        "label": "CRIPTO",
        "kind": 5,
        "importPath": "Backend.core.security",
        "description": "Backend.core.security",
        "peekOfCode": "CRIPTO = CryptContext(schemes=['bcrypt'], deprecated='auto')\ndef gerar_hash_senha(senha: str) -> str:\n    return CRIPTO.hash(senha)\ndef comparar_senha(senha: str, hash_senha: str) -> bool:\n    return CRIPTO.verify(senha, hash_senha)",
        "detail": "Backend.core.security",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "kind": 6,
        "importPath": "Backend.models.usuario_model",
        "description": "Backend.models.usuario_model",
        "peekOfCode": "class UsuarioModel(settings.DBBaseModel):\n    __tablename__ = 'usuarios' \n    id: int = Column(Integer, primary_key=True, autoincrement=True)\n    nome: str = Column(String(255), nullable= True)\n    imagem: str = Column(String(255), nullable= True)\n    email: str = Column(String(255), nullable=False, unique=True)\n    senha: str = Column(String(255), nullable= False)\n    criado_em: str = Column(DateTime, nullable= True)\n    atualizado_em: str = Column(DateTime, nullable= True)",
        "detail": "Backend.models.usuario_model",
        "documentation": {}
    },
    {
        "label": "TarefaSchema",
        "kind": 6,
        "importPath": "Backend.schemas.tarefa_schema",
        "description": "Backend.schemas.tarefa_schema",
        "peekOfCode": "class TarefaSchema(SCBaseModel):\n    id: Optional[int]\n    usuario_id: Optional[int]\n    nome: str\n    descricao: str\n    concluido: bool\n    criado_em: Optional[datetime]\n    atualizado_em: Optional[datetime]\n    class Config:\n        orm_mode = True",
        "detail": "Backend.schemas.tarefa_schema",
        "documentation": {}
    },
    {
        "label": "UsuarioSchemaBase",
        "kind": 6,
        "importPath": "Backend.schemas.usuario_schema",
        "description": "Backend.schemas.usuario_schema",
        "peekOfCode": "class UsuarioSchemaBase(SCBaseModel):\n    id: Optional[int]\n    nome: str\n    email: str\n    imagem: Optional[str]\n    criado_em: Optional[datetime]\n    atualizado_em: Optional[datetime]\n    class Config:\n        orm_mode = True\nclass UsuarioSchemaCreate(UsuarioSchemaBase):",
        "detail": "Backend.schemas.usuario_schema",
        "documentation": {}
    },
    {
        "label": "UsuarioSchemaCreate",
        "kind": 6,
        "importPath": "Backend.schemas.usuario_schema",
        "description": "Backend.schemas.usuario_schema",
        "peekOfCode": "class UsuarioSchemaCreate(UsuarioSchemaBase):\n    senha: str\n    class Config:\n        orm_mode = True\nclass UsuarioSchemaToken(SCBaseModel):\n    usuario: UsuarioSchemaBase\n    acess_token: str\nclass UsuarioSchemaTarefa(UsuarioSchemaBase):\n    tarefas: List[TarefaSchema]",
        "detail": "Backend.schemas.usuario_schema",
        "documentation": {}
    },
    {
        "label": "UsuarioSchemaToken",
        "kind": 6,
        "importPath": "Backend.schemas.usuario_schema",
        "description": "Backend.schemas.usuario_schema",
        "peekOfCode": "class UsuarioSchemaToken(SCBaseModel):\n    usuario: UsuarioSchemaBase\n    acess_token: str\nclass UsuarioSchemaTarefa(UsuarioSchemaBase):\n    tarefas: List[TarefaSchema]",
        "detail": "Backend.schemas.usuario_schema",
        "documentation": {}
    },
    {
        "label": "UsuarioSchemaTarefa",
        "kind": 6,
        "importPath": "Backend.schemas.usuario_schema",
        "description": "Backend.schemas.usuario_schema",
        "peekOfCode": "class UsuarioSchemaTarefa(UsuarioSchemaBase):\n    tarefas: List[TarefaSchema]",
        "detail": "Backend.schemas.usuario_schema",
        "documentation": {}
    },
    {
        "label": "core_path",
        "kind": 5,
        "importPath": "Backend.seed.usuario_seeder",
        "description": "Backend.seed.usuario_seeder",
        "peekOfCode": "core_path = os.path.abspath(\"./\")\nsys.path.append(core_path)\nfrom typing import Generator\nfrom datetime import datetime\nfrom sqlalchemy.ext.asyncio import AsyncSession\nfrom models.usuario_model import UsuarioModel\nfrom core.security import gerar_hash_senha\nfrom fastapi import Depends\nfrom sqlalchemy.ext.asyncio import AsyncSession, async_sessionmaker\nfrom core.database import engine ",
        "detail": "Backend.seed.usuario_seeder",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "Backend.main",
        "description": "Backend.main",
        "peekOfCode": "app = FastAPI(title='API - Tarefas')\napp.include_router(api_router, prefix=settings.API_V1)\norigins = [\n    \"http://localhost\",\n    \"http://localhost:8080\",\n    \"http://127.0.0.1:5173\"\n]\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,",
        "detail": "Backend.main",
        "documentation": {}
    },
    {
        "label": "origins",
        "kind": 5,
        "importPath": "Backend.main",
        "description": "Backend.main",
        "peekOfCode": "origins = [\n    \"http://localhost\",\n    \"http://localhost:8080\",\n    \"http://127.0.0.1:5173\"\n]\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],",
        "detail": "Backend.main",
        "documentation": {}
    }
]